#+TITLE: Modern C++ (11\14\17)
#+AUTHOR: Nelson Rodrigues


*** C++17

| Topic                    | Description                                                          |
|--------------------------+----------------------------------------------------------------------|
| initalization list       | more ...  [[file:cpp17.initialization.list.org][Initalization List]] |
| inline variables         | more ...  [[file:cpp17.inline.org][inline variables]]                |
| anonymous namespaces     | more ...  [[file:cpp17.anonym.org][anonymous namespaces]]            |
| nested namespaces        | more ...  [[file:cpp17.nested.org][nested namespaces]]               |
| template decuction       | more ...  [[file:cpp17.template.deduction.org][template deduction]]  |
| initializer if-statement | more ...  [[file:cpp17.initalizarif.org][initializer if-statement]]  |
| structure unbinding      | more ...  [[file:cpp17.structure.binding.org][structure binding]]    |
| string_view              | more ...  [[file:cpp17.string.view.org][string_view]]                |
| filesystem               | more ...  [[file:cpp17.filesystem.org][filesystem]]                  |
| parallel algorithms      | more ...  [[file:cpp17.palgorithms.org][Parallel Algorithms]]        |



*** Lambdas 


| Topic                 | Description                                                                |
|-----------------------+----------------------------------------------------------------------------|
| lambda recursive      | more info ... [[file:lambda.recursive.org][lambda recursive]]              |
| capture *this (c++17) | more info ... [[file:lambda.this.org][*this (C++17)]]                      |
| lambdas as callback   | more info ... [[file:lambda.callback.org][lambda as callback]]             |
| monads                | more info ... [[https://github.com/NelsonBilber/cpp.monads][Source Code]]  |
| others                | more info ... [[https://github.com/NelsonBilber/cpp.lambdas][Source Code]] |


*** mutable

Mutable keyword can be used for change a value using a const function

*source:* https://stackoverflow.com/questions/105014/does-the-mutable-keyword-have-any-purpose-other-than-allowing-the-variable-to


#+BEGIN_EXAMPLE C++

#include <iostream>

using namespace std;

class Test
{
public:
	Test() = default;
	
	//silly method just for demonstration prospose
	void increment() const 
	{
		Id++;
	}
	
	inline int get() const 
	{
		return Id++;
	}
	
private:
	mutable unsigned int Id = 0;
};

int main()
{
	Test tt = {};
	tt.increment();
	cout << tt.get() << endl;
	
	//capture by value
	int x = 1;
	auto f = [=]() mutable { x = 42; };
	f();
	cout << x <<  " - " <<  endl;
	
	return 0;
}


#+END_EXAMPLE


*** Variadic Templates 

*Example from:* Modern C++ programming cookbook

#+BEGIN_SRC C++

#include <string>
#include <algorithm>
#include <vector>

using namespace std;

template < typename ... Ts > 
auto sum (Ts ... ts)
{
    return (ts + ...);
}

template< typename R, typename ... Ts>
auto matches( const R& range, Ts ... ts)
{
    return (std::count(std::begin(range), std::end(range), ts) + ... );
}

template <typename T, typename ... Ts>
bool within(T  min, T max, Ts ... ts)
{
    return ((min <= ts && ts <= max) && ...);
}

template<typename T, typename ... Ts>
void collapse_vectors(std::vector<T> &vec, Ts ... ts)
{
    (vec.push_back(ts), ...);
}

template <typename T>
void printline(T t) 
{
     cout << t ; 
}


int main ()
{
    int the_sum { sum (1, 2, 3, 4, 5)};
    cout << "Sum: " << the_sum << endl;
  
    string a {"Hello"};
    string b {" World "};
    cout << sum ( a, b ) << endl;
  
    vector<int> v { 1,2,3,4,5}; 
    cout << "Nr. of finds = " << matches(v, 2,5) << endl;


    cout << "is between = " << within(10, 20, 12, 15) << endl;
    cout << "is between = " << within(10, 20, 45, 55) << endl;

    std::vector<int> vv {1,2,3};    
    collapse_vectors( vv, 5,6,8);
    for_each(vv.begin(), vv.end(), printline<int>);
}

#+END_SRC

*Another example:* [[https://github.com/NelsonBilber/cpp.variadic.templates][Source Code]]


*** Move semantics 
	
[[https://github.com/NelsonBilber/cpp.movesemantics][Source Code]]


*** Features by standard

[[https://github.com/AnthonyCalandra/modern-cpp-features/blob/master/CPP11.md][C++11]] [[https://github.com/AnthonyCalandra/modern-cpp-features/blob/master/CPP14.md][C++14]] [[https://github.com/AnthonyCalandra/modern-cpp-features/blob/master/CPP17.md][C++17]]

